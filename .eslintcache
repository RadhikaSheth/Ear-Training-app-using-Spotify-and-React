[{"/home/radhika/project/src/index.js":"1","/home/radhika/project/src/reportWebVitals.js":"2","/home/radhika/project/src/App.js":"3","/home/radhika/project/src/NavBar.js":"4","/home/radhika/project/src/Home.js":"5","/home/radhika/project/src/SpotifyLogin.js":"6","/home/radhika/project/src/Rdirect.js":"7","/home/radhika/project/src/Playlist.js":"8","/home/radhika/project/src/DimensionsProvider.js":"9","/home/radhika/project/src/SoundfontProvider.js":"10","/home/radhika/project/src/PlaylistTracks.js":"11","/home/radhika/project/src/AlbumTracks.js":"12","/home/radhika/project/src/Album.js":"13","/home/radhika/project/src/ArtistTracks.js":"14","/home/radhika/project/src/Artist.js":"15","/home/radhika/project/src/Login.js":"16","/home/radhika/project/src/Quiz.js":"17","/home/radhika/project/src/Profile.js":"18"},{"size":547,"mtime":1610416900546,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1607144941305,"results":"21","hashOfConfig":"20"},{"size":1568,"mtime":1612320100123,"results":"22","hashOfConfig":"20"},{"size":1239,"mtime":1614598147826,"results":"23","hashOfConfig":"20"},{"size":2450,"mtime":1612267151280,"results":"24","hashOfConfig":"20"},{"size":1345,"mtime":1610418015983,"results":"25","hashOfConfig":"20"},{"size":845,"mtime":1612267154168,"results":"26","hashOfConfig":"20"},{"size":2039,"mtime":1612267156732,"results":"27","hashOfConfig":"20"},{"size":341,"mtime":1611025969088,"results":"28","hashOfConfig":"20"},{"size":2911,"mtime":1609305770293,"results":"29","hashOfConfig":"20"},{"size":1505,"mtime":1614425574838,"results":"30","hashOfConfig":"20"},{"size":1420,"mtime":1614425601451,"results":"31","hashOfConfig":"20"},{"size":3462,"mtime":1612267163980,"results":"32","hashOfConfig":"20"},{"size":1426,"mtime":1614425613015,"results":"33","hashOfConfig":"20"},{"size":3816,"mtime":1612267171420,"results":"34","hashOfConfig":"20"},{"size":1254,"mtime":1612320282129,"results":"35","hashOfConfig":"20"},{"size":14587,"mtime":1615466406468,"results":"36","hashOfConfig":"20"},{"size":8400,"mtime":1615097737232,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1xzec9a",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"40"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"40"},"/home/radhika/project/src/index.js",[],["88","89"],"/home/radhika/project/src/reportWebVitals.js",[],"/home/radhika/project/src/App.js",["90","91"],"import React from \"react\";\nimport {BrowserRouter as Router ,Switch,Route} from \"react-router-dom\"\nimport \"./App.css\"\nimport NavBar from \"./NavBar\";\nimport Login from \"./Login\";\nimport SpotifyLogin from \"./SpotifyLogin\";\nimport Rdirect from \"./Rdirect\";\nimport Playlist from \"./Playlist\";\nimport PlaylistTracks from \"./PlaylistTracks\";\nimport Artist from \"./Artist\";\nimport ArtistTracks from \"./ArtistTracks\";\nimport AlbumTracks from \"./AlbumTracks\";\nimport Album from \"./Album\";\nimport Profile from \"./Profile\";\nimport { withRouter } from \"react-router-dom\";\nimport Home from \"./Home\";\n\nfunction App(){    \n  const Main= withRouter(({location})=>{\n    return(\n      <div>\n        {\n          location.pathname != \"/\" && location.pathname !=\"/login\" && <NavBar />\n        }\n      </div>\n    )\n  })\n  return(\n    <Router>\n      <Main />\n      <Switch>\n        <Route path=\"/\" exact component={Login} />\n        <Route path=\"/login\" component={SpotifyLogin} />  \n        <Route path=\"/aboutMe\" component={Profile}/>\n        <Route path=\"/redirect\" component={Rdirect} />\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/playlist\" exact component={Playlist} />\n        <Route path= \"/playlistTrack/:id\" component={PlaylistTracks} />\n        <Route path =\"/searchAlbum\" component ={Album} />\n        <Route path = \"/albumTracks/:id\" component={AlbumTracks} /> \n        <Route path =\"/searchArtist\" component ={Artist} />\n        <Route path = \"/artistTopTracks/:id\" component={ArtistTracks} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n\n","/home/radhika/project/src/NavBar.js",["92"],"import React from \"react\"\nimport {Navbar,Nav} from \"react-bootstrap\";\nvar isprofile = false;\nclass NavBar extends React.Component{\n    constructor(){\n        super();\n        if(window.location.pathname == '/aboutMe'){\n            isprofile = true;\n        }else{\n            isprofile = false;\n        }\n    }\n    render(){\n        return(\n            <Navbar fluid collapseOnSelect  style={{backgroundColor: isprofile ? \"\t#6eb5aa\" : \"#479c9d\"}}  variant=\"dark\" expand=\"lg\" >\n                <Navbar.Brand href=\"/home\"><b>MUSIC APP</b></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\" >\n                    <Nav className=\"mr-auto\" >\n                        <Nav.Link href=\"/playlist\" ><b>PLAYLIST</b></Nav.Link>\n                        <Nav.Link href=\"/searchAlbum\"><b>ALBUM</b></Nav.Link>\n                        <Nav.Link href=\"/searchArtist\" ><b>ARTIST</b></Nav.Link>\n                    </Nav>\n                    <Nav className=\"ml-auto mr-5\">\n                        <Nav.Link href=\"/aboutMe\"><b>PROFILE</b></Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\nexport default NavBar;","/home/radhika/project/src/Home.js",[],"/home/radhika/project/src/SpotifyLogin.js",["93"],"import React,{useEffect} from \"react\"\nfunction SpotifyLogin(){\n    \n    const REACT_APP_CLIENT_ID = 'f18222a3046041d5baa40d833aa1e018'\n    const REACT_APP_AUTHORIZE_URL = \"https://accounts.spotify.com/authorize\"\n    const REACT_APP_REDIRECT_URL = \"http://localhost:3000/redirect\"\n    var scope = 'playlist-read-private user-read-private user-read-email user-read-playback-state user-top-read playlist-read-private';\n    const generateRandomString = function(length) {\n        var text = '';\n        var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      \n        for (var i = 0; i < length; i++) {\n          text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text;\n    };\n    useEffect(()=>{\n        handleLogin();\n    })\n    var state = generateRandomString(16);\n    var url = 'https://accounts.spotify.com/authorize';\n        url += '?response_type=token';\n        url += '&client_id=' + encodeURIComponent(REACT_APP_CLIENT_ID);\n        url += '&scope=' + encodeURIComponent(scope);\n        url += '&redirect_uri=' + encodeURIComponent(REACT_APP_REDIRECT_URL);\n        url += '&state=' + encodeURIComponent(state);\n    const handleLogin = () => {\n        window.location = url;\n    };\n    return(\n        <div>\n        </div>\n    )\n    \n}\nexport default SpotifyLogin;","/home/radhika/project/src/Rdirect.js",["94"],"import React from \"react\"\nimport Spotify from 'spotify-web-api-js';\nimport ls from 'local-storage';\nimport Home from \"./Home\";\n\nls.set('isLoggedIn',true);\nconst SpotifyWebApi = new Spotify();\nclass Rdirect extends React.Component{\n    constructor(){\n        super();\n        const params = this.getHashParams();\n        if(params.access_token){\n            SpotifyWebApi.setAccessToken(params.access_token)\n        }\n        ls.set('accessToken', params.access_token);\n    }\n    getHashParams() {\n        var hashParams = {};\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\n            q = window.location.hash.substring(1);\n        while ( e = r.exec(q)) {\n           hashParams[e[1]] = decodeURIComponent(e[2]);\n        }\n        return hashParams;\n    }\n    render(){\n        return(\n            <Home />\n        )\n    }\n}\nexport default Rdirect;\n","/home/radhika/project/src/Playlist.js",["95","96"],"import React, { Component } from \"react\"\nimport Spotify from 'spotify-web-api-js';\nimport { Link } from \"react-router-dom\";\nimport { Button,Container, Col, Row} from \"react-bootstrap\"\nimport ls from 'local-storage';\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nclass Playlist extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            playlists: [],\n        }\n    }\n    componentDidMount() {\n        SpotifyWebApi.setAccessToken(AT);\n        this.getPlaying();\n    }\n    getPlaying() {\n        SpotifyWebApi.getUserPlaylists()\n            .then((response) => {\n                response.items.map((item) => {\n                    this.setState({\n                        playlists: [...this.state.playlists,\n                        {\n                            id: item.id,\n                            name: item.name\n                        }\n                        ],\n                    })\n                })\n            })\n    }\n    render() {\n        return (\n            <div>\n                <br />\n                \n                <Container fluid >\n                    <Row>\n                        <Col className=\"d-flex justify-content-center align-items-center d-inline-block\"> <h3>CHOOSE THE PLAYLIST:</h3></Col>\n                    </Row>\n                </Container>\n                <br />\n\n                <Container fluid>\n                    {this.state.playlists.map(item => (\n                        <Row>\n                            <Col className=\"mt-1\" md={{ span: 6, offset: 3 }}>\n                            <Link to={`/playlistTrack/${item.id}`} style={{ textDecoration: 'inherit' }}>\n                                <Button fluid variant=\"dark\"style={{backgroundColor:\"#9ca9aa\",border:\"none\"}} size=\"lg\" block>{item.name}</Button>\n                            </Link>\n                            </Col>\n                        </Row>\n                    ))} \n                </Container>\n            </div>\n        )\n    }\n}\nexport default Playlist;","/home/radhika/project/src/DimensionsProvider.js",[],"/home/radhika/project/src/SoundfontProvider.js",[],["97","98"],"/home/radhika/project/src/PlaylistTracks.js",["99"],"import React from \"react\"\nimport Spotify from 'spotify-web-api-js';\nimport ls from 'local-storage';\nimport Quiz from \"./Quiz\";\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nvar userID = ls.get('userID');\nclass PlaylistTracks extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            pid: this.props.match.params.id,\n            songs : [],\n            res: false\n        }\n    }\n    componentDidMount(){\n        SpotifyWebApi.setAccessToken(AT);\n        this.getSongs();\n    }\n    getSongs() {\n        SpotifyWebApi.getPlaylistTracks(userID, this.state.pid)\n            .then((response) => {\n                response.items.map((item) => {\n                    this.setState({\n                        songs: [...this.state.songs,\n                        {\n                            id: item.track.id,\n                            name: item.track.name,\n                        }\n                        ],\n                    })\n                })\n                this.setState({\n                    res : true,\n                })\n            });\n        \n    }\n    render(){\n        return(\n            <div>\n                {this.state.res ?\n                    <div>\n                    {ls.set('quizType','Playlist')}\n                    <Quiz arr={this.state.songs} quizID={this.state.pid}/>\n                    </div>\n                    :null\n                }\n            </div>\n        )\n    }\n}\nexport default PlaylistTracks;","/home/radhika/project/src/AlbumTracks.js",["100"],"import React from \"react\"\nimport Spotify from 'spotify-web-api-js';\nimport ls from 'local-storage';\nimport Quiz from \"./Quiz\";\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nclass AlbumTracks extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            listId: this.props.match.params.id,\n            songs : [],\n            dir: false\n            \n        }\n    }\n    componentDidMount(){\n        SpotifyWebApi.setAccessToken(AT);\n        this.getSongs();\n    }\n    getSongs() {\n            SpotifyWebApi.getAlbumTracks(this.state.listId)\n            .then((response) => {\n                response.items.map((item) => {\n                    this.setState({\n                        songs: [...this.state.songs,\n                        {\n                            id: item.id,\n                        }\n                        ],\n                    })\n                })\n                this.setState({\n                    dir : true\n                })\n            });\n    }\n    render(){\n        return(\n            <div>\n                {this.state.dir ?\n                    <div>\n                    {ls.set('quizType','Album Tracks')}\n                    <Quiz arr={this.state.songs} quizID={this.state.listId}/>\n                    </div>\n                    :null\n                }\n            </div>\n        )\n    }\n}\nexport default AlbumTracks;","/home/radhika/project/src/Album.js",["101","102"],"import React from \"react\";\nimport Spotify from 'spotify-web-api-js';\nimport { Link } from \"react-router-dom\";    \nimport { Button } from \"react-bootstrap\"\nimport ls from 'local-storage';\nimport {Form, Row, Col,Container} from \"react-bootstrap\";\nimport \"./App.css\"\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nclass Album extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            query : '',\n            list :[],\n            res: false,\n        }\n    }\n    componentDidMount(){\n        SpotifyWebApi.setAccessToken(AT);\n    }\n    getAlbum(){\n        SpotifyWebApi.searchAlbums(this.state.query, { limit: 12})\n        .then((response) => {\n            response.albums.items.map((item) => {\n                this.setState({\n                    list: [...this.state.list,\n                    {\n                        id: item.id,\n                        name: item.name,\n                        image : item.images[0].url\n                    }\n                    ],\n                })\n           })\n            this.setState({\n                res:true,\n            })\n        })\n        \n    }\n    keyPress(e){\n        if(e.key === 'Enter'){\n            this.getAlbum();\n            e.preventDefault();\n        }\n     }\n    handleChange(event) {\n        const key = event.target.name;\n        const value = event.target.value;\n        this.setState({ [key]: value });\n    }\n    render(){\n        return(\n                <div >\n                 <br />\n                <Container>\n                    <Row>\n                        <Col>\n                        <Form.Group>\n                            <Form.Control size=\"lg\" type=\"text\" name =\"query\" placeholder=\"Search Album\" onKeyDown={this.keyPress.bind(this)} onChange={this.handleChange.bind(this)} />\n                            <Row className=\" mt-2\">\n                                <Col style={{textAlign:\"center\"}}>\n                                <Button style={{width:150}}variant=\"dark\" size=\"lg\" onClick={this.getAlbum.bind(this)}> Search</Button>{' '}\n                                </Col>         \n                            </Row>\n                        </Form.Group>\n                        </Col>\n                    </Row>\n                </Container>\n                <Container>\n                {this.state.res ?\n                    <div>\n                        {this.state.list.map((item) =>{\n                            return (\n                                <Link   style={{ textDecoration: 'inherit' }} to={{pathname:`/albumTracks/${item.id}`,val:this.state.val}}  >\n                                    <Row  className=\"dispItems\" xs={1} md={2} >\n                                    <Col style={{textAlign:\"center\"}}>\n                                        <img src={item.image} height=\"200\" width=\"200\"/>\n                                    </Col>\n                                    <Col   style={{ textDecoration: 'inherit',color:\"black\"}}className=\"d-flex justify-content-center align-items-center d-inline-block\">\n                                    {item.name}\n                                    </Col>\n                                    </Row>\n                                </Link>\n                            )\n                        })}\n                    </div>\n                    :null\n                }\n                </Container>\n             </div>\n        )\n    }\n}\nexport default Album;","/home/radhika/project/src/ArtistTracks.js",["103"],"import React from \"react\"\nimport Spotify from 'spotify-web-api-js';\nimport ls from 'local-storage';\nimport Quiz from \"./Quiz\";\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nclass ArtistTracks extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            listId: this.props.match.params.id,\n            songs : [],\n            dir: false\n        }\n    }\n    componentDidMount(){\n        SpotifyWebApi.setAccessToken(AT);\n        this.getSongs();\n    }\n    getSongs() {\n            SpotifyWebApi.getArtistTopTracks(this.state.listId,\"IN\")\n            .then((response) => {\n                response.tracks.map((item) => {\n                    this.setState({\n                        songs: [...this.state.songs,\n                        {\n                            id: item.id,\n                        }\n                        ],\n                    })\n                })\n                this.setState({\n                    dir : true\n                })\n            });\n    }\n    render(){\n        return(\n            <div>\n                {this.state.dir ?\n                    <div>\n                    {ls.set('quizType','Artist Top Tracks')}  \n                    <Quiz arr={this.state.songs} quizID={this.state.listId}/>\n                    </div>\n                    :null\n                }\n            </div>\n        )\n    }\n}\nexport default ArtistTracks;","/home/radhika/project/src/Artist.js",["104","105","106","107"],"import React from \"react\";\nimport Spotify from 'spotify-web-api-js';\nimport { Link } from \"react-router-dom\";    \nimport { Button, Container } from \"react-bootstrap\"\nimport ls from 'local-storage';\nimport {Form, Row, Col} from \"react-bootstrap\";\nimport Img from \"./icon.jpg\"\nimport \"./App.css\"\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nclass Artist extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            query : '',\n            list :[],\n            res: false,\n        }\n    }\n    componentDidMount(){\n        SpotifyWebApi.setAccessToken(AT);\n    }\n    getAlbum(){\n            SpotifyWebApi.searchArtists(this.state.query, { limit: 12})\n            .then((response) => {\n                this.state.list.length=0;\n                response.artists.items.map((item) => {\n                    var img='';\n                    if(item.images.length ==0){\n                        img =Img;\n                    }else{\n                        img = item.images[0].url;\n                    }\n                    this.setState({\n                    list: [...this.state.list,\n                            {\n                                id: item.id,\n                                name: item.name,\n                                image : img\n                            }\n                        ],\n                    })\n                })\n                this.setState({\n                    res:true,\n                })\n            })\n    }\n    keyPress(e){\n        if(e.key === 'Enter'){\n            this.getAlbum();\n            e.preventDefault();\n        }\n     }\n    handleChange(event) {\n        const key = event.target.name;\n        const value = event.target.value;\n        this.setState({ [key]: value });\n    }\n    render(){\n        return(\n             <div >\n                 <br />\n                <Container>\n                    <Row>\n                        <Col>\n                        <Form.Group>\n                            <Form.Control size=\"lg\" type=\"text\" name =\"query\" placeholder=\"Search Artist\" onKeyDown={this.keyPress.bind(this)} onChange={this.handleChange.bind(this)} />\n                            <Row className=\"rwid mt-2\">\n                                <Col style={{textAlign:\"center\"}}>\n                                <Button style={{width:150}}variant=\"dark\" size=\"lg\" onClick={this.getAlbum.bind(this)}> Search</Button>{' '}\n                                </Col>         \n                            </Row>\n                        </Form.Group>\n                        </Col>\n                    </Row>\n                </Container>\n                <Container>\n                {this.state.res ?\n                    <div>\n                        {this.state.list.map((item) =>{\n                            return (\n                                <Link style={{ textDecoration: 'inherit' }} to={{pathname:`/artistTopTracks/${item.id}`,val:this.state.val}}  >\n                                    <Row  className=\"dispItems\" xs={1} md={2} >\n                                    <Col style={{textAlign:\"center\"}}>\n                                        <img src={item.image} height=\"200\" width=\"200\"/>\n                                    </Col>\n                                    <Col   style={{ textDecoration: 'inherit',color:\"black\"}}className=\"d-flex justify-content-center align-items-center d-inline-block\">\n                                    {item.name}\n                                    </Col>\n                                    </Row>\n                                </Link>\n                            )\n                        })}\n                    </div>\n                    :null\n                }\n                </Container>\n             </div>\n        )\n    }\n}\nexport default Artist;","/home/radhika/project/src/Login.js",[],"/home/radhika/project/src/Quiz.js",["108","109","110","111","112","113","114","115","116","117","118","119","120","121"],"import React from \"react\";\nimport Spotify from 'spotify-web-api-js';\nimport \"./App.css\";\nimport ls from 'local-storage';\nimport Modal from 'react-modal';\nimport {Container, Row, Col,Button, Form,Card,Toast} from 'react-bootstrap';\nimport Image from \"./score_card.jpg\";\nimport {toast} from 'react-toastify';\nimport axios from \"axios\"\nimport 'react-toastify/dist/ReactToastify.css';\n//for importing piano\nimport DimensionsProvider from './DimensionsProvider.js';\nimport SoundfontProvider from './SoundfontProvider';\nimport { Piano, KeyboardShortcuts, MidiNumbers } from 'react-piano';\nimport 'react-piano/dist/styles.css';\n\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\nconst soundfontHostname = 'https://d1pzp51pvbm36p.cloudfront.net';\nconst noteRange = {\n    first: MidiNumbers.fromNote('c3'),\n    last: MidiNumbers.fromNote('f4'),\n};\nfunction ResponsivePiano(props) {\n    return (\n      <DimensionsProvider>\n        {({ containerWidth, containerHeight }) => (\n          <SoundfontProvider\n            instrumentName=\"acoustic_grand_piano\"\n            audioContext={audioContext}\n            hostname={soundfontHostname}\n            render={({ isLoading, playNote, stopNote }) => (\n              <Piano\n                noteRange={noteRange}\n                width={containerWidth}\n                height={containerHeight}\n                playNote={playNote}\n                stopNote={stopNote}\n                disabled={isLoading}\n                {...props}\n              />\n            )}\n          />\n        )}\n      </DimensionsProvider>\n    );\n}\nvar viewportWidth  = document.documentElement.clientWidth;\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n  };\nModal.setAppElement(document.getElementById('root'));\ntoast.configure()\n\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nclass Quiz extends React.Component {\n    constructor(props) {\n        super(props);\n        var today = new Date(), \n        date = today.getDate() + '-' + (today.getMonth() + 1)  +  '-' + today.getFullYear();  \n        this.state = { \n            currentDate: date, \n            api_key: 0,\n            api_mode:0,\n            correct :0,\n            incorrect:0,\n            key:0,\n            mode:1,\n            url: '',\n            bigview : true,\n            song: [],\n            index: 0,\n            idd: '',\n            final:false,\n            piano:false,\n            pbut:'Open Piano'\n        }\n    }\n    componentDidMount() {\n        SpotifyWebApi.setAccessToken(AT);\n        this.init();\n    }\n    init(){  \n        var ar= [];\n        this.props.arr.map((item) =>{\n            var obj = {};\n            obj[\"id\"] = item.id;\n            obj[\"taken\"] = false;\n            ar.push(obj);\n        })\n        var view;\n        if(viewportWidth <= 519){\n            view = false;\n        }else{\n            view=true;\n        }\n        this.setState({\n            bigview:view,\n            song: ar,\n        },()=>{\n            this.seturl();\n            \n        })\n    }\n    seturl(){\n        if(this.state.song.length !==0){\n            this.setState({\n                url: 'https://open.spotify.com/embed/track/' + this.state.song[0].id,\n                idd: this.state.song[0].id\n            })\n        }\n    }\n    finalResult(){\n        var quizdetails={\n            userId : ls.get('userID'),\n            quizDate : this.state.currentDate, \n            quizType : ls.get('quizType'),\n            quizId: this.props.quizID,\n            correctVal: this.state.correct,\n            incorrectVal : this.state.incorrect,\n            skippedVal : this.state.song.length - this.state.correct -this.state.incorrect\n        }\n        axios.post('http://localhost:8080/entry',quizdetails,{\n            params:{\n                userId: ls.get('userID'),\n                accessToken : ls.get('accessToken')\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n        this.setState({\n            final:true\n        })\n    }\n    playNext() {\n        var tid='';\n        var temperory_index = 0;\n        if(this.state.index == this.state.song.length-1){\n            this.finalResult();\n        } else {\n            temperory_index = this.state.index+1;\n            tid = this.state.song[temperory_index].id\n            var url2 = 'https://open.spotify.com/embed/track/' + tid;\n            this.setState(\n            {\n                index : temperory_index,\n                url: url2,\n                idd: this.state.song[temperory_index].id,\n            }); \n        }\n        \n    }\n    generateResult(){\n        if(this.state.song[this.state.index].taken===false){\n            var res1 = this.state.correct;\n            var res2 = this.state.incorrect;\n            if(this.state.api_key == this.state.key && this.state.api_mode == this.state.mode){\n                res1 += 1;\n                toast(\"CORRECT!\",{\n                    autoClose:1500,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }else{\n                res2 +=1;\n                toast(\"INCORRECT!\",{\n                    autoClose:2000,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n            let song = [...this.state.song];\n            let s = {\n                ...song[this.state.index],\n                taken: true\n            }\n            song[this.state.index] = s;\n            this.setState({\n                correct : res1,\n                incorrect: res2,\n                song\n            }, () => {\n                \n                if(this.state.api_key == this.state.key && this.state.api_mode == this.state.mode){\n                    this.playNext();\n                }\n            })\n        }else{\n            if(this.state.api_key == this.state.key && this.state.api_mode == this.state.mode){\n                this.playNext();\n                toast(\"Correct! But score won't be counted\",{\n                    autoClose:2000,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }else{\n                toast(\"Keep Trying!\",{\n                    autoClose:2000,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                })\n            }\n        }\n    }\n    getresult(){\n        SpotifyWebApi.getAudioFeaturesForTrack(this.state.idd)\n            .then((response) => {\n                this.setState({\n                        api_key: response.key,\n                        api_mode:response.mode,\n                    \n                },()=>{\n                    this.generateResult();\n                })\n            }) \n    }\n    handleChange(event) {\n        const key = event.target.name;\n        const value = event.target.value;\n        this.setState({ [key]: value });\n    }\n    handleSubmit(){\n        if(this.state.song.length !=0){\n            this.getresult();\n        }\n        \n    }\n    playPiano(){\n        var pval = false;\n        var p = '';\n        if(this.state.piano){\n            pval = false;\n            p = \"Open Piano\"\n        }else{\n            pval = true;\n            p = \"Close Piano\"\n        }\n        this.setState({\n            piano:pval,\n            pbut: p\n        })\n    }\n    render() { \n        const p = \"\";\n        return (\n            <div style={{backgroundColor:\"#f8f9f5\"}}>\n                <br />\n                <Container fluid>\n                    <Row xs={1} md={2}>\n                        <Col className=\"ifr\" fluid>\n                            <br />\n                            {this.state.bigview?\n                                <iframe src={this.state.url} width=\"300\" height=\"380\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                                :\n                                <iframe src={this.state.url} width=\"360\" height=\"80\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                            }\n                            <br />\n                            \n                        </Col>\n                        <Col className=\"mt-2 d-flex justify-content-center align-items-center d-inline-block\">\n                            <br />\n                            <Form onSubmit={this.handleSubmit} style={{width:\"85%\"}}>\n                                <Form.Group >\n                                <Form.Label>{this.state.bigview ? <h4><b>WHATS THE KEY?</b></h4> : <h6><br/><b>WHATS THE KEY?</b></h6>}</Form.Label>\n                                <br />\n                                \n                                <Form.Control as=\"select\" name=\"key\"  onChange={this.handleChange.bind(this)}>\n                                    <option value=\"0\">C</option>\n                                    <option value=\"1\">Db / C#</option>\n                                    <option value=\"2\">D</option>\n                                    <option value=\"3\">Eb</option>\n                                    <option value=\"4\">E</option>\n                                    <option value=\"5\">F</option>\n                                    <option value=\"6\">Gb / F#</option>\n                                    <option value=\"7\">G</option>\n                                    <option value=\"8\">Ab</option>\n                                    <option value=\"9\">A</option>\n                                    <option value=\"10\">Bb</option>\n                                    <option value=\"11\">B / Cb</option>\n                                </Form.Control>\n                                <br />\n                                <Form.Control as=\"select\" name=\"mode\" mode={this.state.mode} onChange={this.handleChange.bind(this)}>\n                                    <option value=\"1\">Major</option>\n                                    <option value=\"0\">Minor</option>\n                                </Form.Control>\n                                <br />\n                                <Row xs={1} md={3} className=\"mt-2 d-flex justify-content-center align-items-center d-inline-block\" >\n                                    <Col>\n                                        <Button className=\"mt-2\" style={{width:150}}variant=\"info\"  onClick={this.handleSubmit.bind(this)} > \n                                            GUESS\n                                        </Button>{' '}\n                                    </Col>\n                                    <Col>\n                                        <Button className=\"mt-2\" style={{width:150}}variant=\"dark\" onClick={this.playNext.bind(this)} >\n                                            SKIP\n                                        </Button>{' '}\n                                    </Col>\n                                    <Col>\n                                        <Button className=\"mt-2\" style={{width:150}} variant=\"outline-dark\" onClick={this.playPiano.bind(this)} >\n                                            {this.state.pbut}\n                                        </Button>{' '}\n                                    </Col>\n                                </Row>\n                                <br />\n                                <Row >\n                                    <Col style={{overflow:\"auto\",display:\"block\",}}>\n                                        {this.state.piano ?\n                                            <ResponsivePiano /> : null\n                                        }  \n                                    </Col>\n                                </Row>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                    </Row>\n                    <Row >\n                        <Col className=\"mt-2 d-flex justify-content-center align-items-center d-inline-block\">\n                            <Card style={{ width: '20rem',textAlign:\"center\"}}>\n                                <Card.Header style={{backgroundColor:\"#3b3c36\",color:\"white\",fontSize:\"130%\"}}><b>SCORE</b></Card.Header>\n                                <Card.Body style={{backgroundColor:\"white\"}}>\n                                <Card.Text>\n                                CORRECT : {this.state.correct}\n                                <br />\n                                INCORRECT: {this.state.incorrect}\n                                </Card.Text>\n                            </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n                {this.state.final? \n                    <Modal style={customStyles} isOpen={true}>\n                        <Card style={{height:\"400px\",width:\"500px\"}}> \n                        <Card.Img src={Image} alt=\"Card image\" />\n                        <Card.ImgOverlay>\n                        <Card.Title style={{textAlign:\"center\", color:\"#4B9CD3\", textShadow: \"2px 2px 0px  white, -2px -2px 0px  white, 2px -2px 0px white, -2px 2px 0px  white\"}}><b><h1>SCORE CARD</h1></b></Card.Title>\n                        <Card.Text style={{textAlign:\"center\",marginTop:\"100px\"}}>\n                            <h4 >\n                                CORRECT :{this.state.correct}\n                                <br />\n                                INCORRECT :{this.state.incorrect}\n                            </h4>\n                        </Card.Text>\n                        <div style={{textAlign:\"center\",marginTop:\"100px\"}}>\n                            <Button href=\"/home\" variant=\"outline-secondary\" style={{width:\"100px\"}}>HOME</Button>\n                            <Button onClick={() => window.location.reload(false)} variant=\"outline-secondary\" style={{width:\"100px\"}} className=\"ml-3\">RE-TEST</Button>\n                        </div>\n                        </Card.ImgOverlay>\n                        </Card>\n                    </Modal>\n                    : null\n                }\n                <br />\n            </div>\n        )\n    }\n}\nexport default Quiz;","/home/radhika/project/src/Profile.js",["122","123","124","125","126"],"import React from \"react\"\nimport Spotify from 'spotify-web-api-js';\nimport ls from 'local-storage';\nimport axios from \"axios\"   \nimport UserIcon from \"./usericon.jpg\";\nimport Chart from \"react-google-charts\";\nimport { Container,Row,Col,Image,Table} from \"react-bootstrap\";\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nconst userID = ls.get('userID');\nclass Profile extends React.Component{\n    \n    constructor(props){\n        super(props);\n        this.state={\n            userProfile:[],\n            graphData:[],\n            skippedSum:'',\n            corrSum : '',\n            incorrSum : '',\n            userName: ''\n        }\n    }\n    componentDidMount(){\n        // var userDetails = [userID,AT]\n        SpotifyWebApi.setAccessToken(AT);\n        axios.get('http://localhost:8080/user',{\n            params : {\n                userId:userID,\n                accessToken : AT\n            }\n        })\n        .then((response) => {\n            var correctSum=0;\n            var incorrectSum =0;\n            var songs =0;\n            var skippedSum=0;\n            response.data.map((item)=>{\n                correctSum += item.correctVal;\n                incorrectSum += item.incorrectVal;\n                skippedSum += item.skippedVal;\n                songs += item.correctVal + item.incorrectVal + item.skippedVal;\n                this.setState({\n                    \n                    skippedSum : skippedSum,\n                    corrSum : correctSum,\n                    incorrSum : incorrectSum,\n                    totalSongs : songs,\n                    graphData :[...this.state.graphData,\n                    {\n                        correctSongs : item.correctVal,\n                        incorrectSongs : item.incorrectVal,\n                        skippedSongs : item.skippedVal\n                    } \n                    ],\n                    userProfile: [...this.state.userProfile,\n                    {\n                        quizDate : item.quizDate,\n                        quizId : item.quizId,\n                        quizType : item.quizType,\n                        correct : item.correctVal,\n                        incorrect : item.incorrectVal,\n                        skipped : item.skippedVal\n                    }\n                    ],\n                })\n            })\n            console.log(response.data);\n        })\n        .catch((err) =>{\n            console.log(err);\n        })\n        this.init();\n    }\n    init(){\n        SpotifyWebApi.getMe(userID)\n        .then((response) => {\n            var img='';\n            if(response.images.length==0){\n                img = UserIcon;\n            }else{\n                img = response.images[0].url;\n            }\n            this.setState({\n                userName : response.display_name,\n                userImage : img,\n                result:true,\n            })\n        });\n\n    }\n    \n    render(){\n        var arr = Array.from(Array(this.state.userProfile.length + 1), () => new Array(4));\n        arr[0] = ['DATE','CORRECT','INCORRECT','SKIPPED'];\n        var index =1;\n        this.state.userProfile.map((item)=> {\n                arr[index] =[item.quizDate , item.correct , item.incorrect, item.skipped]\n                index++;\n            })\n        var isprofile =false;\n        if(this.state.userProfile.length==0){\n            isprofile = false;\n        }else{\n            isprofile=true;\n        }\n        var index=0;\n        return(\n            <div>\n                {this.state.result ? \n                <>\n                <Container fluid>\n                    <Row style={{paddingTop:\"1%\",backgroundColor : \"#3d7475\"}}>\n                        <Col style={{marginLeft:\"5%\",textAlign:\"right\"}} >\n                        <p style={{color:\"white\",fontSize:\"110%\",paddingRight:\"4%\"}}>Hello {this.state.userName} &nbsp;<span style={{fontSize : \"110%\"}}>|</span>\n                            &nbsp;&nbsp;<Image src={this.state.userImage} roundedCircle height=\"60px\" width=\"60px\" /></p>\n                        </Col>\n                    </Row>\n                </Container>\n                <br />\n                {isprofile ? \n                <Container>\n                    <Row xs={1} md={2} >\n                        <Col  style={{textAlign:\"right\"}}> \n                            <Chart \n                            \n                                chartType=\"PieChart\"\n                                loader={<div>Loading Chart</div>}\n                                options={{\n                                    chartArea: {    width: \"90%\", height: \"90%\"},\n                                    slices: [\n                                        {\n                                          color: \"#2BB673\"\n                                        },\n                                        {\n                                          color: \"#d91e48\"\n                                        },\n                                        {\n                                          color: \"#007fad\"\n                                        }\n                                      ],\n                                      legend : 'none',\n                                }}\n                                data={[\n                                    ['Task', 'Quiz Result'],\n                                    ['Correct', this.state.corrSum],\n                                    ['Incorrect',this.state.incorrSum],\n                                    ['Skipped',this.state.skippedSum],\n                                ]}\n                            />\n                        </Col>\n                        <Col>\n                            <Chart\n                            width=\"100%\"\n                            height=\"110%\"\n                            chartType=\"LineChart\"\n                            loader={<div>Loading Chart</div>}\n                            data = {arr}\n                            options={{\n                                chartArea:{top:\"5%\"},\n                                hAxis: {\n                                title: 'Date',\n                                },\n                                vAxis: {\n                                title: 'Songs',\n                                },\n                                legend: { position: 'bottom' },\n                                series: {\n                                    0: { color: '#2BB673' },\n                                    1: { color: '#d91e48' },\n                                    2: { color: '#007fad' },\n                                  }\n                            }}\n                            />\n                        </Col>\n                    </Row>\n                    <br />\n                    <Row>\n                        <h4>QUIZ HISTORY</h4>\n                        <Table striped bordered hover >\n                        <thead>\n                            <tr>\n                            <th style={{width:\"20%\"}}>#</th>\n                            <th style={{width:\"20%\"}}>DATE</th>\n                            <th style={{width:\"20%\"}}>TYPE</th>\n                            <th style={{width:\"20%\"}}>SCORE</th>\n                            <th style={{width:\"20%\"}}>TOTAL</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        \n                            {this.state.userProfile.map((item)=>{\n                                \n                                index++;\n                                return(\n                                <tr>\n                                <td>{index}</td>\n                                <td>{item.quizDate}</td>\n                                <td>{item.quizType}</td>\n                                <td>{item.correct}</td>\n                                <td>{item.skipped + item.correct + item.incorrect}</td>\n                                </tr> \n                                )\n                            }\n                            )}\n                        \n                        </tbody>\n                        </Table>\n                    </Row>\n                </Container>\n                :\n                <h2 style={{textAlign:\"center\"}}>YOU HAVE NOT TESTED YOUR SKILLS YET!</h2>\n                }\n                </>\n                :null}\n            </div>\n        )\n    }\n}\nexport default Profile;",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":23,"column":29,"nodeType":"133","messageId":"134","endLine":23,"endColumn":31},{"ruleId":"131","severity":1,"message":"132","line":23,"column":57,"nodeType":"133","messageId":"134","endLine":23,"endColumn":59},{"ruleId":"131","severity":1,"message":"135","line":7,"column":37,"nodeType":"133","messageId":"134","endLine":7,"endColumn":39},{"ruleId":"136","severity":1,"message":"137","line":5,"column":11,"nodeType":"138","messageId":"139","endLine":5,"endColumn":34},{"ruleId":"140","severity":1,"message":"141","line":21,"column":17,"nodeType":"142","messageId":"143","endLine":21,"endColumn":30},{"ruleId":"136","severity":1,"message":"144","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},{"ruleId":"145","severity":1,"message":"146","line":22,"column":43,"nodeType":"147","messageId":"148","endLine":22,"endColumn":45},{"ruleId":"127","replacedBy":"149"},{"ruleId":"129","replacedBy":"150"},{"ruleId":"145","severity":1,"message":"146","line":24,"column":43,"nodeType":"147","messageId":"148","endLine":24,"endColumn":45},{"ruleId":"145","severity":1,"message":"146","line":24,"column":43,"nodeType":"147","messageId":"148","endLine":24,"endColumn":45},{"ruleId":"145","severity":1,"message":"146","line":25,"column":46,"nodeType":"147","messageId":"148","endLine":25,"endColumn":48},{"ruleId":"151","severity":1,"message":"152","line":79,"column":41,"nodeType":"153","endLine":79,"endColumn":89},{"ruleId":"145","severity":1,"message":"146","line":23,"column":44,"nodeType":"147","messageId":"148","endLine":23,"endColumn":46},{"ruleId":"154","severity":1,"message":"155","line":26,"column":17,"nodeType":"156","endLine":26,"endColumn":32},{"ruleId":"145","severity":1,"message":"146","line":27,"column":51,"nodeType":"147","messageId":"148","endLine":27,"endColumn":53},{"ruleId":"131","severity":1,"message":"135","line":29,"column":43,"nodeType":"133","messageId":"134","endLine":29,"endColumn":45},{"ruleId":"151","severity":1,"message":"152","line":86,"column":41,"nodeType":"153","endLine":86,"endColumn":89},{"ruleId":"136","severity":1,"message":"157","line":6,"column":47,"nodeType":"138","messageId":"139","endLine":6,"endColumn":52},{"ruleId":"136","severity":1,"message":"158","line":14,"column":17,"nodeType":"138","messageId":"139","endLine":14,"endColumn":34},{"ruleId":"145","severity":1,"message":"146","line":92,"column":35,"nodeType":"147","messageId":"148","endLine":92,"endColumn":37},{"ruleId":"131","severity":1,"message":"135","line":146,"column":29,"nodeType":"133","messageId":"134","endLine":146,"endColumn":31},{"ruleId":"131","severity":1,"message":"135","line":165,"column":35,"nodeType":"133","messageId":"134","endLine":165,"endColumn":37},{"ruleId":"131","severity":1,"message":"135","line":165,"column":76,"nodeType":"133","messageId":"134","endLine":165,"endColumn":78},{"ruleId":"131","severity":1,"message":"135","line":196,"column":39,"nodeType":"133","messageId":"134","endLine":196,"endColumn":41},{"ruleId":"131","severity":1,"message":"135","line":196,"column":80,"nodeType":"133","messageId":"134","endLine":196,"endColumn":82},{"ruleId":"131","severity":1,"message":"135","line":201,"column":35,"nodeType":"133","messageId":"134","endLine":201,"endColumn":37},{"ruleId":"131","severity":1,"message":"135","line":201,"column":76,"nodeType":"133","messageId":"134","endLine":201,"endColumn":78},{"ruleId":"131","severity":1,"message":"132","line":239,"column":35,"nodeType":"133","messageId":"134","endLine":239,"endColumn":37},{"ruleId":"136","severity":1,"message":"159","line":260,"column":15,"nodeType":"138","messageId":"139","endLine":260,"endColumn":16},{"ruleId":"160","severity":1,"message":"161","line":269,"column":33,"nodeType":"153","endLine":269,"endColumn":136},{"ruleId":"160","severity":1,"message":"161","line":271,"column":33,"nodeType":"153","endLine":271,"endColumn":151},{"ruleId":"145","severity":1,"message":"146","line":38,"column":37,"nodeType":"147","messageId":"148","endLine":38,"endColumn":39},{"ruleId":"131","severity":1,"message":"135","line":79,"column":38,"nodeType":"133","messageId":"134","endLine":79,"endColumn":40},{"ruleId":"145","severity":1,"message":"146","line":97,"column":42,"nodeType":"147","messageId":"148","endLine":97,"endColumn":44},{"ruleId":"131","severity":1,"message":"135","line":102,"column":41,"nodeType":"133","messageId":"134","endLine":102,"endColumn":43},{"ruleId":"162","severity":1,"message":"163","line":107,"column":13,"nodeType":"138","messageId":"164","endLine":107,"endColumn":18},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-unused-vars","'REACT_APP_AUTHORIZE_URL' is assigned a value but never used.","Identifier","unusedVar","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'Component' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["165"],["166"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Toast' is defined but never used.","'KeyboardShortcuts' is defined but never used.","'p' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-redeclare","'index' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]
[{"/home/radhika/project/src/index.js":"1","/home/radhika/project/src/reportWebVitals.js":"2","/home/radhika/project/src/App.js":"3","/home/radhika/project/src/InputSong.js":"4","/home/radhika/project/src/NavBar.js":"5","/home/radhika/project/src/InputList.js":"6","/home/radhika/project/src/ShowSong.js":"7","/home/radhika/project/src/Home.js":"8","/home/radhika/project/src/SpotifyLogin.js":"9","/home/radhika/project/src/Rdirect.js":"10","/home/radhika/project/src/Playlist.js":"11","/home/radhika/project/src/Score.js":"12","/home/radhika/project/src/DimensionsProvider.js":"13","/home/radhika/project/src/SoundfontProvider.js":"14","/home/radhika/project/src/PlaylistTracks.js":"15","/home/radhika/project/src/Example.js":"16","/home/radhika/project/src/AlbumTracks.js":"17","/home/radhika/project/src/Album.js":"18","/home/radhika/project/src/ArtistTracks.js":"19","/home/radhika/project/src/Artist.js":"20","/home/radhika/project/src/Login.js":"21","/home/radhika/project/src/Quiz.js":"22"},{"size":547,"mtime":1610416900546,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1607144941305,"results":"25","hashOfConfig":"24"},{"size":1572,"mtime":1611660818011,"results":"26","hashOfConfig":"24"},{"size":2412,"mtime":1607246583103,"results":"27","hashOfConfig":"28"},{"size":856,"mtime":1611404733989,"results":"29","hashOfConfig":"24"},{"size":4796,"mtime":1608001944823,"results":"30","hashOfConfig":"24"},{"size":1821,"mtime":1608287606139,"results":"31","hashOfConfig":"24"},{"size":2326,"mtime":1611660818011,"results":"32","hashOfConfig":"24"},{"size":1345,"mtime":1610418015983,"results":"33","hashOfConfig":"24"},{"size":845,"mtime":1611404211010,"results":"34","hashOfConfig":"24"},{"size":2039,"mtime":1611660818031,"results":"35","hashOfConfig":"24"},{"size":1836,"mtime":1609135868520,"results":"36","hashOfConfig":"28"},{"size":341,"mtime":1611025969088,"results":"37","hashOfConfig":"24"},{"size":2911,"mtime":1609305770293,"results":"38","hashOfConfig":"24"},{"size":1576,"mtime":1611483090042,"results":"39","hashOfConfig":"24"},{"size":378,"mtime":1609479549558,"results":"40","hashOfConfig":"24"},{"size":1304,"mtime":1611483182017,"results":"41","hashOfConfig":"24"},{"size":3462,"mtime":1611715645397,"results":"42","hashOfConfig":"24"},{"size":1284,"mtime":1611660818011,"results":"43","hashOfConfig":"24"},{"size":3816,"mtime":1611657998356,"results":"44","hashOfConfig":"24"},{"size":1254,"mtime":1611194070820,"results":"45","hashOfConfig":"24"},{"size":13729,"mtime":1611478142968,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"ps1dfd",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xzec9a",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"49"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"49"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"49"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"49"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"49"},"/home/radhika/project/src/index.js",[],["105","106"],"/home/radhika/project/src/reportWebVitals.js",[],"/home/radhika/project/src/App.js",["107","108"],"import React from \"react\";\nimport {BrowserRouter as Router ,Switch,Route} from \"react-router-dom\"\nimport \"./App.css\"\nimport NavBar from \"./NavBar\";\nimport Login from \"./Login\";\nimport SpotifyLogin from \"./SpotifyLogin\";\nimport Rdirect from \"./Rdirect\";\nimport Playlist from \"./Playlist\";\nimport PlaylistTracks from \"./PlaylistTracks\";\nimport Example from \"./Example\";\nimport Artist from \"./Artist\";\nimport ArtistTracks from \"./ArtistTracks\";\nimport AlbumTracks from \"./AlbumTracks\";\nimport Album from \"./Album\";\nimport { withRouter } from \"react-router-dom\";\nimport Home from \"./Home\";\n\nfunction App(){    \n  const Main= withRouter(({location})=>{\n    return(\n      <div>\n        {\n          location.pathname != \"/\" && location.pathname !=\"/login\" && <NavBar />\n        }\n      </div>\n    )\n  })\n  return(\n    <Router>\n      <Main />\n      <Switch>\n        <Route path=\"/\" exact component={Login} />\n        <Route path=\"/login\" component={SpotifyLogin} />  \n        <Route path=\"/redirect\" component={Rdirect} />\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/playlist\" exact component={Playlist} />\n        <Route path= \"/playlistTrack/:id\" component={PlaylistTracks} />\n        <Route path =\"/example\" component = {Example} />\n        <Route path =\"/searchAlbum\" component ={Album} />\n        <Route path = \"/albumTracks/:id\" component={AlbumTracks} /> \n        <Route path =\"/searchArtist\" component ={Artist} />\n        <Route path = \"/artistTopTracks/:id\" component={ArtistTracks} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n\n","/home/radhika/project/src/InputSong.js",["109"],"/home/radhika/project/src/NavBar.js",[],"/home/radhika/project/src/InputList.js",[],["110","111"],"/home/radhika/project/src/ShowSong.js",[],"/home/radhika/project/src/Home.js",[],"/home/radhika/project/src/SpotifyLogin.js",["112"],"import React,{useEffect} from \"react\"\nfunction SpotifyLogin(){\n    \n    const REACT_APP_CLIENT_ID = 'f18222a3046041d5baa40d833aa1e018'\n    const REACT_APP_AUTHORIZE_URL = \"https://accounts.spotify.com/authorize\"\n    const REACT_APP_REDIRECT_URL = \"http://localhost:3000/redirect\"\n    var scope = 'playlist-read-private user-read-private user-read-email user-read-playback-state user-top-read playlist-read-private';\n    const generateRandomString = function(length) {\n        var text = '';\n        var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      \n        for (var i = 0; i < length; i++) {\n          text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text;\n    };\n    useEffect(()=>{\n        handleLogin();\n    })\n    var state = generateRandomString(16);\n    var url = 'https://accounts.spotify.com/authorize';\n        url += '?response_type=token';\n        url += '&client_id=' + encodeURIComponent(REACT_APP_CLIENT_ID);\n        url += '&scope=' + encodeURIComponent(scope);\n        url += '&redirect_uri=' + encodeURIComponent(REACT_APP_REDIRECT_URL);\n        url += '&state=' + encodeURIComponent(state);\n    const handleLogin = () => {\n        window.location = url;\n    };\n    return(\n        <div>\n        </div>\n    )\n    \n}\nexport default SpotifyLogin;","/home/radhika/project/src/Rdirect.js",["113"],"import React from \"react\"\nimport Spotify from 'spotify-web-api-js';\nimport ls from 'local-storage';\nimport Home from \"./Home\";\n\nls.set('isLoggedIn',true);\nconst SpotifyWebApi = new Spotify();\nclass Rdirect extends React.Component{\n    constructor(){\n        super();\n        const params = this.getHashParams();\n        if(params.access_token){\n            SpotifyWebApi.setAccessToken(params.access_token)\n        }\n        ls.set('accessToken', params.access_token);\n    }\n    getHashParams() {\n        var hashParams = {};\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\n            q = window.location.hash.substring(1);\n        while ( e = r.exec(q)) {\n           hashParams[e[1]] = decodeURIComponent(e[2]);\n        }\n        return hashParams;\n    }\n    render(){\n        return(\n            <Home />\n        )\n    }\n}\nexport default Rdirect;\n","/home/radhika/project/src/Playlist.js",["114","115"],"import React, { Component } from \"react\"\nimport Spotify from 'spotify-web-api-js';\nimport { Link } from \"react-router-dom\";\nimport { Button,Container, Col, Row} from \"react-bootstrap\"\nimport ls from 'local-storage';\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nclass Playlist extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            playlists: [],\n        }\n\n    }\n    componentDidMount() {\n        SpotifyWebApi.setAccessToken(AT);\n        this.getPlaying();\n    }\n    getPlaying() {\n        SpotifyWebApi.getUserPlaylists()\n            .then((response) => {\n                response.items.map((item) => {\n                    this.setState({\n                        playlists: [...this.state.playlists,\n                        {\n                            id: item.id,\n                            name: item.name\n                        }\n                        ],\n                    })\n                })\n            })\n    }\n    render() {\n        return (\n            <div>\n                <br />\n                \n                <Container fluid >\n                    <Row>\n                        <Col className=\"d-flex justify-content-center align-items-center d-inline-block\"> <h3>CHOOSE THE PLAYLIST:</h3></Col>\n                    </Row>\n                </Container>\n                <br />\n\n                <Container fluid>\n                    {this.state.playlists.map(item => (\n                        <Row>\n                            <Col className=\"mt-1\" md={{ span: 6, offset: 3 }}>\n                            <Link to={`/playlistTrack/${item.id}`} style={{ textDecoration: 'inherit' }}>\n                                <Button fluid variant=\"dark\"style={{backgroundColor:\"#9ca9aa\",border:\"none\"}} size=\"lg\" block>{item.name}</Button>\n                            </Link>\n                            </Col>\n                        </Row>\n                    ))} \n                </Container>\n            </div>\n        )\n    }\n}\nexport default Playlist;","/home/radhika/project/src/Score.js",["116","117","118","119","120","121","122","123","124","125"],"import React,{Component} from \"react\";\nimport Spotify from 'spotify-web-api-js';\nimport \"./App.css\";\nimport ls from 'local-storage';\nimport { Container, Row, Col,Button, Form} from 'react-bootstrap';\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nclass Score extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            api_key : 0,\n            api_mode :1,\n            correct :0,\n            incorrect:0\n        }\n    }\n    componentDidMount() {\n        SpotifyWebApi.setAccessToken(AT);\n        this.getresult();\n        console.log(this.state.correct);\n        console.log(this.state.incorrect)\n    }\n    generateResult(){\n        var res1 = this.state.correct;\n        var res2 = this.state.incorrect;\n        if(this.state.api_key == this.props.key1 && this.state.api_mode == this.props.mode){\n            ls.set('correctResult',ls.get('correctResult') +1);\n\n        }else{\n            ls.set('incorrectResult',ls.get('incorrectResult') +1);\n        }\n        console.log(\"Result:\")\n        console.log(ls.get('correctResult'));\n        console.log(ls.get('incorrectResult'));\n\n        \n    }\n    getresult(props){\n        SpotifyWebApi.getAudioFeaturesForTrack(this.props.id1)\n            .then((response) => {\n                this.setState({\n                        api_key: response.key,\n                        api_mode:response.mode,\n                    \n                },()=>{\n                    // console.log(\"executed\");\n                    // console.log(this.state.api_key);\n                    // console.log(this.state.api_mode);\n                    this.generateResult();\n                })\n            }) \n    }\n    render(){\n        \n        return(\n            <div>\n                \n            </div>\n        )\n    }\n}\nexport default Score;\n","/home/radhika/project/src/DimensionsProvider.js",[],"/home/radhika/project/src/SoundfontProvider.js",[],["126","127"],"/home/radhika/project/src/PlaylistTracks.js",["128"],"import React from \"react\"\nimport Spotify from 'spotify-web-api-js';\nimport ls from 'local-storage';\nimport Quiz from \"./Quiz\";\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nclass PlaylistTracks extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            pid: this.props.match.params.id,\n            songs : [],\n            res: false\n        }\n    }\n    componentDidMount(){\n        SpotifyWebApi.setAccessToken(AT);\n        this.getUid();\n    }\n    getUid() {\n        SpotifyWebApi.getMe()\n            .then((response) => {\n                this.setState({\n                    u_id: response.id,\n                })\n                this.getSongs();\n            })\n    }\n    getSongs() {\n        SpotifyWebApi.getPlaylistTracks(this.state.u_id, this.state.pid)\n            .then((response) => {\n                response.items.map((item) => {\n                    this.setState({\n                        songs: [...this.state.songs,\n                        {\n                            id: item.track.id,\n                            name: item.track.name,\n                        }\n                        ],\n                    })\n                })\n                this.setState({\n                    res : true,\n                })\n            });\n        \n    }\n    render(){\n        return(\n            <div>\n                {this.state.res ?\n                    <Quiz arr={this.state.songs} />:\n                    null\n                }\n            </div>\n        )\n    }\n}\nexport default PlaylistTracks;","/home/radhika/project/src/Example.js",[],"/home/radhika/project/src/AlbumTracks.js",["129"],"import React from \"react\"\nimport Spotify from 'spotify-web-api-js';\nimport ls from 'local-storage';\nimport Quiz from \"./Quiz\";\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nclass AlbumTracks extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            listId: this.props.match.params.id,\n            songs : [],\n            dir: false\n            \n        }\n    }\n    componentDidMount(){\n        SpotifyWebApi.setAccessToken(AT);\n        this.getSongs();\n    }\n    getSongs() {\n        \n            SpotifyWebApi.getAlbumTracks(this.state.listId)\n            .then((response) => {\n                response.items.map((item) => {\n                    this.setState({\n                        songs: [...this.state.songs,\n                        {\n                            id: item.id,\n                        }\n                        ],\n                    })\n                })\n                this.setState({\n                    dir : true\n\n                })\n            });\n        \n    }\n    render(){\n        return(\n            <div>\n                {this.state.dir ?\n                    <Quiz arr={this.state.songs} />:\n                    null\n                }\n            </div>\n        )\n    }\n}\nexport default AlbumTracks;","/home/radhika/project/src/Album.js",["130","131"],"import React from \"react\";\nimport Spotify from 'spotify-web-api-js';\nimport { Link } from \"react-router-dom\";    \nimport { Button } from \"react-bootstrap\"\nimport ls from 'local-storage';\nimport {Form, Row, Col,Container} from \"react-bootstrap\";\nimport \"./App.css\"\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nclass Album extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            query : '',\n            list :[],\n            res: false,\n        }\n    }\n    componentDidMount(){\n        SpotifyWebApi.setAccessToken(AT);\n    }\n    getAlbum(){\n        SpotifyWebApi.searchAlbums(this.state.query, { limit: 12})\n        .then((response) => {\n            response.albums.items.map((item) => {\n                this.setState({\n                    list: [...this.state.list,\n                    {\n                        id: item.id,\n                        name: item.name,\n                        image : item.images[0].url\n                    }\n                    ],\n                })\n           })\n            this.setState({\n                res:true,\n            })\n        })\n        \n    }\n    keyPress(e){\n        if(e.key === 'Enter'){\n            this.getAlbum();\n            e.preventDefault();\n        }\n     }\n    handleChange(event) {\n        const key = event.target.name;\n        const value = event.target.value;\n        this.setState({ [key]: value });\n    }\n    render(){\n        return(\n                <div >\n                 <br />\n                <Container>\n                    <Row>\n                        <Col>\n                        <Form.Group>\n                            <Form.Control size=\"lg\" type=\"text\" name =\"query\" placeholder=\"Search Album\" onKeyDown={this.keyPress.bind(this)} onChange={this.handleChange.bind(this)} />\n                            <Row className=\" mt-2\">\n                                <Col style={{textAlign:\"center\"}}>\n                                <Button style={{width:150}}variant=\"dark\" size=\"lg\" onClick={this.getAlbum.bind(this)}> Search</Button>{' '}\n                                </Col>         \n                            </Row>\n                        </Form.Group>\n                        </Col>\n                    </Row>\n                </Container>\n                <Container>\n                {this.state.res ?\n                    <div>\n                        {this.state.list.map((item) =>{\n                            return (\n                                <Link   style={{ textDecoration: 'inherit' }} to={{pathname:`/albumTracks/${item.id}`,val:this.state.val}}  >\n                                    <Row  className=\"dispItems\" xs={1} md={2} >\n                                    <Col style={{textAlign:\"center\"}}>\n                                        <img src={item.image} height=\"200\" width=\"200\"/>\n                                    </Col>\n                                    <Col   style={{ textDecoration: 'inherit',color:\"black\"}}className=\"d-flex justify-content-center align-items-center d-inline-block\">\n                                    {item.name}\n                                    </Col>\n                                    </Row>\n                                </Link>\n                            )\n                        })}\n                    </div>\n                    :null\n                }\n                </Container>\n             </div>\n        )\n    }\n}\nexport default Album;","/home/radhika/project/src/ArtistTracks.js",["132"],"import React from \"react\"\nimport Spotify from 'spotify-web-api-js';\nimport ls from 'local-storage';\nimport Quiz from \"./Quiz\";\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nclass ArtistTracks extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            listId: this.props.match.params.id,\n            songs : [],\n            dir: false\n            \n        }\n    }\n    componentDidMount(){\n        SpotifyWebApi.setAccessToken(AT);\n        this.getSongs();\n    }\n    getSongs() {\n            SpotifyWebApi.getArtistTopTracks(this.state.listId,\"IN\")\n            .then((response) => {\n                response.tracks.map((item) => {\n                    this.setState({\n                        songs: [...this.state.songs,\n                        {\n                            id: item.id,\n                        }\n                        ],\n                    })\n                })\n                this.setState({\n                    dir : true\n\n                })\n            });\n        \n        \n        \n    }\n    render(){\n        return(\n            <div>\n                {this.state.dir ?\n                    <Quiz arr={this.state.songs} />:\n                    null\n                }\n            </div>\n        )\n    }\n}\nexport default ArtistTracks;","/home/radhika/project/src/Artist.js",["133","134","135","136"],"import React from \"react\";\nimport Spotify from 'spotify-web-api-js';\nimport { Link } from \"react-router-dom\";    \nimport { Button, Container } from \"react-bootstrap\"\nimport ls from 'local-storage';\nimport {Form, Row, Col} from \"react-bootstrap\";\nimport Img from \"./icon.jpg\"\nimport \"./App.css\"\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nclass Artist extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            query : '',\n            list :[],\n            res: false,\n        }\n    }\n    componentDidMount(){\n        SpotifyWebApi.setAccessToken(AT);\n    }\n    getAlbum(){\n            SpotifyWebApi.searchArtists(this.state.query, { limit: 12})\n            .then((response) => {\n                this.state.list.length=0;\n                response.artists.items.map((item) => {\n                    var img='';\n                    if(item.images.length ==0){\n                        img =Img;\n                    }else{\n                        img = item.images[0].url;\n                    }\n                    this.setState({\n                    list: [...this.state.list,\n                            {\n                                id: item.id,\n                                name: item.name,\n                                image : img\n                            }\n                        ],\n                    })\n                })\n                this.setState({\n                    res:true,\n                })\n            })\n    }\n    keyPress(e){\n        if(e.key === 'Enter'){\n            this.getAlbum();\n            e.preventDefault();\n        }\n     }\n    handleChange(event) {\n        const key = event.target.name;\n        const value = event.target.value;\n        this.setState({ [key]: value });\n    }\n    render(){\n        return(\n             <div >\n                 <br />\n                <Container>\n                    <Row>\n                        <Col>\n                        <Form.Group>\n                            <Form.Control size=\"lg\" type=\"text\" name =\"query\" placeholder=\"Search Artist\" onKeyDown={this.keyPress.bind(this)} onChange={this.handleChange.bind(this)} />\n                            <Row className=\"rwid mt-2\">\n                                <Col style={{textAlign:\"center\"}}>\n                                <Button style={{width:150}}variant=\"dark\" size=\"lg\" onClick={this.getAlbum.bind(this)}> Search</Button>{' '}\n                                </Col>         \n                            </Row>\n                        </Form.Group>\n                        </Col>\n                    </Row>\n                </Container>\n                <Container>\n                {this.state.res ?\n                    <div>\n                        {this.state.list.map((item) =>{\n                            return (\n                                <Link style={{ textDecoration: 'inherit' }} to={{pathname:`/artistTopTracks/${item.id}`,val:this.state.val}}  >\n                                    <Row  className=\"dispItems\" xs={1} md={2} >\n                                    <Col style={{textAlign:\"center\"}}>\n                                        <img src={item.image} height=\"200\" width=\"200\"/>\n                                    </Col>\n                                    <Col   style={{ textDecoration: 'inherit',color:\"black\"}}className=\"d-flex justify-content-center align-items-center d-inline-block\">\n                                    {item.name}\n                                    </Col>\n                                    </Row>\n                                </Link>\n                            )\n                        })}\n                    </div>\n                    :null\n                }\n                </Container>\n             </div>\n        )\n    }\n}\nexport default Artist;","/home/radhika/project/src/Login.js",[],"/home/radhika/project/src/Quiz.js",["137","138","139","140","141","142","143","144","145","146","147","148","149","150"],"import React from \"react\";\nimport Spotify from 'spotify-web-api-js';\nimport \"./App.css\";\nimport ls from 'local-storage';\nimport Modal from 'react-modal';\nimport {Container, Row, Col,Button, Form,Card,Toast} from 'react-bootstrap';\nimport Image from \"./bg001.jpg\";\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n//for importing piano\nimport DimensionsProvider from './DimensionsProvider.js';\nimport SoundfontProvider from './SoundfontProvider';\nimport { Piano, KeyboardShortcuts, MidiNumbers } from 'react-piano';\nimport 'react-piano/dist/styles.css';\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\nconst soundfontHostname = 'https://d1pzp51pvbm36p.cloudfront.net';\nconst noteRange = {\n    first: MidiNumbers.fromNote('c3'),\n    last: MidiNumbers.fromNote('f4'),\n};\nfunction ResponsivePiano(props) {\n    return (\n      <DimensionsProvider>\n        {({ containerWidth, containerHeight }) => (\n          <SoundfontProvider\n            instrumentName=\"acoustic_grand_piano\"\n            audioContext={audioContext}\n            hostname={soundfontHostname}\n            render={({ isLoading, playNote, stopNote }) => (\n              <Piano\n                noteRange={noteRange}\n                width={containerWidth}\n                height={containerHeight}\n                playNote={playNote}\n                stopNote={stopNote}\n                disabled={isLoading}\n                {...props}\n              />\n            )}\n          />\n        )}\n      </DimensionsProvider>\n    );\n}\nvar viewportWidth  = document.documentElement.clientWidth;\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n  };\nModal.setAppElement(document.getElementById('root'));\ntoast.configure()\n\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nclass Quiz extends React.Component {\n    constructor(props) {\n        super(props);   \n        this.state = {  \n            api_key: 0,\n            api_mode:0,\n            correct :0,\n            incorrect:0,\n            key:0,\n            mode:1,\n            url: '',\n            bigview : true,\n            song: [],\n            index: 0,\n            idd: '',\n            final:false,\n            piano:false,\n            pbut:'Open Piano'\n        }\n    }\n    componentDidMount() {\n        SpotifyWebApi.setAccessToken(AT);\n        this.init();\n    }\n    init(){  \n        var ar= [];\n        this.props.arr.map((item) =>{\n            var obj = {};\n            obj[\"id\"] = item.id;\n            obj[\"taken\"] = false;\n            ar.push(obj);\n        })\n        var view;\n        if(viewportWidth <= 519){\n            view = false;\n        }else{\n            view=true;\n        }\n        this.setState({\n            bigview:view,\n            song: ar,\n        },()=>{\n            this.seturl();\n            \n        })\n    }\n    seturl(){\n        if(this.state.song.length !==0){\n            this.setState({\n                url: 'https://open.spotify.com/embed/track/' + this.state.song[0].id,\n                idd: this.state.song[0].id\n            })\n        }\n    }\n    finalResult(){\n        this.setState({\n            final:true\n        })\n    }\n    playNext() {\n        var tid='';\n        var temperory_index = 0;\n        if(this.state.index == this.state.song.length-1){\n            this.finalResult();\n        } else {\n            temperory_index = this.state.index+1;\n            tid = this.state.song[temperory_index].id\n            var url2 = 'https://open.spotify.com/embed/track/' + tid;\n            this.setState(\n            {\n                index : temperory_index,\n                url: url2,\n                idd: this.state.song[temperory_index].id,\n            }); \n        }\n        \n    }\n    generateResult(){\n        if(this.state.song[this.state.index].taken===false){\n            var res1 = this.state.correct;\n            var res2 = this.state.incorrect;\n            if(this.state.api_key == this.state.key && this.state.api_mode == this.state.mode){\n                res1 += 1;\n                toast(\"CORRECT!\",{\n                    autoClose:1500,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }else{\n                res2 +=1;\n                toast(\"INCORRECT!\",{\n                    autoClose:2000,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n            let song = [...this.state.song];\n            let s = {\n                ...song[this.state.index],\n                taken: true\n            }\n            song[this.state.index] = s;\n            this.setState({\n                correct : res1,\n                incorrect: res2,\n                song\n            }, () => {\n                \n                if(this.state.api_key == this.state.key && this.state.api_mode == this.state.mode){\n                    this.playNext();\n                }\n            })\n        }else{\n            if(this.state.api_key == this.state.key && this.state.api_mode == this.state.mode){\n                this.playNext();\n                toast(\"Correct! But score won't be counted\",{\n                    autoClose:2000,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }else{\n                toast(\"Keep Trying!\",{\n                    autoClose:2000,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                })\n            }\n        }\n    }\n    getresult(){\n        SpotifyWebApi.getAudioFeaturesForTrack(this.state.idd)\n            .then((response) => {\n                this.setState({\n                        api_key: response.key,\n                        api_mode:response.mode,\n                    \n                },()=>{\n                    this.generateResult();\n                })\n            }) \n    }\n    handleChange(event) {\n        const key = event.target.name;\n        const value = event.target.value;\n        this.setState({ [key]: value });\n    }\n    handleSubmit(){\n        if(this.state.song.length !=0){\n            this.getresult();\n        }\n        \n    }\n    playPiano(){\n        var pval = false;\n        var p = '';\n        if(this.state.piano){\n            pval = false;\n            p = \"Open Piano\"\n        }else{\n            pval = true;\n            p = \"Close Piano\"\n        }\n        this.setState({\n            piano:pval,\n            pbut: p\n        })\n    }\n    render() { \n        const p = \"\";\n        return (\n            <div style={{backgroundColor:\"#f8f9f5\"}}>\n                <br />\n                <Container fluid>\n                    <Row xs={1} md={2}>\n                        <Col className=\"ifr\" fluid>\n                            <br />\n                            {this.state.bigview?\n                                <iframe src={this.state.url} width=\"300\" height=\"380\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                                :\n                                <iframe src={this.state.url} width=\"360\" height=\"80\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                            }\n                            <br />\n                            \n                        </Col>\n                        <Col className=\"mt-2 d-flex justify-content-center align-items-center d-inline-block\">\n                            <br />\n                            <Form onSubmit={this.handleSubmit} style={{width:\"85%\"}}>\n                                <Form.Group >\n                                <Form.Label>{this.state.bigview ? <h4><b>WHATS THE KEY?</b></h4> : <h6><br/><b>WHATS THE KEY?</b></h6>}</Form.Label>\n                                <br />\n                                \n                                <Form.Control as=\"select\" name=\"key\"  onChange={this.handleChange.bind(this)}>\n                                    <option value=\"0\">C</option>\n                                    <option value=\"1\">Db / C#</option>\n                                    <option value=\"2\">D</option>\n                                    <option value=\"3\">Eb</option>\n                                    <option value=\"4\">E</option>\n                                    <option value=\"5\">F</option>\n                                    <option value=\"6\">Gb / F#</option>\n                                    <option value=\"7\">G</option>\n                                    <option value=\"8\">Ab</option>\n                                    <option value=\"9\">A</option>\n                                    <option value=\"10\">Bb</option>\n                                    <option value=\"11\">B / Cb</option>\n                                </Form.Control>\n                                <br />\n                                <Form.Control as=\"select\" name=\"mode\" mode={this.state.mode} onChange={this.handleChange.bind(this)}>\n                                    <option value=\"1\">Major</option>\n                                    <option value=\"0\">Minor</option>\n                                </Form.Control>\n                                <br />\n                                <Row xs={1} md={3} className=\"mt-2 d-flex justify-content-center align-items-center d-inline-block\" >\n                                    <Col>\n                                        <Button className=\"mt-2\" style={{width:150}}variant=\"info\"  onClick={this.handleSubmit.bind(this)} > \n                                            GUESS\n                                        </Button>{' '}\n                                    </Col>\n                                    <Col>\n                                        <Button className=\"mt-2\" style={{width:150}}variant=\"dark\" onClick={this.playNext.bind(this)} >\n                                            SKIP\n                                        </Button>{' '}\n                                    </Col>\n                                    <Col>\n                                        <Button className=\"mt-2\" style={{width:150}} variant=\"outline-dark\" onClick={this.playPiano.bind(this)} >\n                                            {this.state.pbut}\n                                        </Button>{' '}\n                                    </Col>\n                                </Row>\n                                <br />\n                                <Row >\n                                    <Col style={{overflow:\"auto\",display:\"block\",}}>\n                                        {this.state.piano ?\n                                            <ResponsivePiano /> : null\n                                        }  \n                                    </Col>\n                                </Row>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                    </Row>\n                    <Row >\n                        <Col className=\"mt-2 d-flex justify-content-center align-items-center d-inline-block\">\n                            <Card style={{ width: '20rem',textAlign:\"center\"}}>\n                                <Card.Header style={{backgroundColor:\"#3b3c36\",color:\"white\",fontSize:\"130%\"}}><b>SCORE</b></Card.Header>\n                                <Card.Body style={{backgroundColor:\"white\"}}>\n                                <Card.Text>\n                                CORRECT : {this.state.correct}\n                                <br />\n                                INCORRECT: {this.state.incorrect}\n                                </Card.Text>\n                            </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n                {this.state.final? \n                    <Modal style={customStyles} isOpen={true}>\n                        <Card style={{height:\"400px\",width:\"500px\"}}> \n                        <Card.Img src={Image} alt=\"Card image\" />\n                        <Card.ImgOverlay>\n                        <Card.Title style={{textAlign:\"center\", color:\"#4B9CD3\", textShadow: \"2px 2px 0px  white, -2px -2px 0px  white, 2px -2px 0px white, -2px 2px 0px  white\"}}><b><h1>SCORE CARD</h1></b></Card.Title>\n                        <Card.Text style={{textAlign:\"center\",marginTop:\"100px\"}}>\n                            <h4 >\n                                CORRECT :{this.state.correct}\n                                <br />\n                                INCORRECT :{this.state.incorrect}\n                            </h4>\n                        </Card.Text>\n                        <div style={{textAlign:\"center\",marginTop:\"100px\"}}>\n                            <Button href=\"/home\" variant=\"outline-secondary\" style={{width:\"100px\"}}>HOME</Button>\n                            <Button onClick={() => window.location.reload(false)} variant=\"outline-secondary\" style={{width:\"100px\"}} className=\"ml-3\">RE-TEST</Button>\n                        </div>\n                        </Card.ImgOverlay>\n                        </Card>\n                    </Modal>\n                    : null\n                }\n                <br />\n            </div>\n        )\n    }\n}\nexport default Quiz;",{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":23,"column":29,"nodeType":"157","messageId":"158","endLine":23,"endColumn":31},{"ruleId":"155","severity":1,"message":"156","line":23,"column":57,"nodeType":"157","messageId":"158","endLine":23,"endColumn":59},{"ruleId":"159","severity":1,"message":"160","line":2,"column":8,"nodeType":"161","messageId":"162","endLine":2,"endColumn":16},{"ruleId":"151","replacedBy":"163"},{"ruleId":"153","replacedBy":"164"},{"ruleId":"159","severity":1,"message":"165","line":5,"column":11,"nodeType":"161","messageId":"162","endLine":5,"endColumn":34},{"ruleId":"166","severity":1,"message":"167","line":21,"column":17,"nodeType":"168","messageId":"169","endLine":21,"endColumn":30},{"ruleId":"159","severity":1,"message":"170","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"172","line":23,"column":43,"nodeType":"173","messageId":"174","endLine":23,"endColumn":45},{"ruleId":"159","severity":1,"message":"170","line":1,"column":15,"nodeType":"161","messageId":"162","endLine":1,"endColumn":24},{"ruleId":"159","severity":1,"message":"175","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":19},{"ruleId":"159","severity":1,"message":"176","line":5,"column":21,"nodeType":"161","messageId":"162","endLine":5,"endColumn":24},{"ruleId":"159","severity":1,"message":"177","line":5,"column":26,"nodeType":"161","messageId":"162","endLine":5,"endColumn":29},{"ruleId":"159","severity":1,"message":"178","line":5,"column":30,"nodeType":"161","messageId":"162","endLine":5,"endColumn":36},{"ruleId":"159","severity":1,"message":"179","line":5,"column":38,"nodeType":"161","messageId":"162","endLine":5,"endColumn":42},{"ruleId":"159","severity":1,"message":"180","line":25,"column":13,"nodeType":"161","messageId":"162","endLine":25,"endColumn":17},{"ruleId":"159","severity":1,"message":"181","line":26,"column":13,"nodeType":"161","messageId":"162","endLine":26,"endColumn":17},{"ruleId":"155","severity":1,"message":"182","line":27,"column":31,"nodeType":"157","messageId":"158","endLine":27,"endColumn":33},{"ruleId":"155","severity":1,"message":"182","line":27,"column":73,"nodeType":"157","messageId":"158","endLine":27,"endColumn":75},{"ruleId":"151","replacedBy":"183"},{"ruleId":"153","replacedBy":"184"},{"ruleId":"171","severity":1,"message":"172","line":32,"column":43,"nodeType":"173","messageId":"174","endLine":32,"endColumn":45},{"ruleId":"171","severity":1,"message":"172","line":25,"column":43,"nodeType":"173","messageId":"174","endLine":25,"endColumn":45},{"ruleId":"171","severity":1,"message":"172","line":25,"column":46,"nodeType":"173","messageId":"174","endLine":25,"endColumn":48},{"ruleId":"185","severity":1,"message":"186","line":79,"column":41,"nodeType":"187","endLine":79,"endColumn":89},{"ruleId":"171","severity":1,"message":"172","line":24,"column":44,"nodeType":"173","messageId":"174","endLine":24,"endColumn":46},{"ruleId":"188","severity":1,"message":"189","line":26,"column":17,"nodeType":"190","endLine":26,"endColumn":32},{"ruleId":"171","severity":1,"message":"172","line":27,"column":51,"nodeType":"173","messageId":"174","endLine":27,"endColumn":53},{"ruleId":"155","severity":1,"message":"182","line":29,"column":43,"nodeType":"157","messageId":"158","endLine":29,"endColumn":45},{"ruleId":"185","severity":1,"message":"186","line":86,"column":41,"nodeType":"187","endLine":86,"endColumn":89},{"ruleId":"159","severity":1,"message":"191","line":6,"column":47,"nodeType":"161","messageId":"162","endLine":6,"endColumn":52},{"ruleId":"159","severity":1,"message":"192","line":13,"column":17,"nodeType":"161","messageId":"162","endLine":13,"endColumn":34},{"ruleId":"171","severity":1,"message":"172","line":87,"column":35,"nodeType":"173","messageId":"174","endLine":87,"endColumn":37},{"ruleId":"155","severity":1,"message":"182","line":123,"column":29,"nodeType":"157","messageId":"158","endLine":123,"endColumn":31},{"ruleId":"155","severity":1,"message":"182","line":142,"column":35,"nodeType":"157","messageId":"158","endLine":142,"endColumn":37},{"ruleId":"155","severity":1,"message":"182","line":142,"column":76,"nodeType":"157","messageId":"158","endLine":142,"endColumn":78},{"ruleId":"155","severity":1,"message":"182","line":173,"column":39,"nodeType":"157","messageId":"158","endLine":173,"endColumn":41},{"ruleId":"155","severity":1,"message":"182","line":173,"column":80,"nodeType":"157","messageId":"158","endLine":173,"endColumn":82},{"ruleId":"155","severity":1,"message":"182","line":178,"column":35,"nodeType":"157","messageId":"158","endLine":178,"endColumn":37},{"ruleId":"155","severity":1,"message":"182","line":178,"column":76,"nodeType":"157","messageId":"158","endLine":178,"endColumn":78},{"ruleId":"155","severity":1,"message":"156","line":216,"column":35,"nodeType":"157","messageId":"158","endLine":216,"endColumn":37},{"ruleId":"159","severity":1,"message":"193","line":237,"column":15,"nodeType":"161","messageId":"162","endLine":237,"endColumn":16},{"ruleId":"194","severity":1,"message":"195","line":246,"column":33,"nodeType":"187","endLine":246,"endColumn":136},{"ruleId":"194","severity":1,"message":"195","line":248,"column":33,"nodeType":"187","endLine":248,"endColumn":151},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar",["196"],["197"],"'REACT_APP_AUTHORIZE_URL' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'Component' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'res1' is assigned a value but never used.","'res2' is assigned a value but never used.","Expected '===' and instead saw '=='.",["196"],["197"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Toast' is defined but never used.","'KeyboardShortcuts' is defined but never used.","'p' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]